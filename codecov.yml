# cat codecov.yml | curl --data-binary @- https://codecov.io/validate
fixes:
  - "empower/::"

coverage:
  precision: 2
  round: down
  status:
    project:
      default:
        informational: true
        target: 35%
    patch:
      frontend:
        informational: true
        target: 80%
        flags:
          - frontend
      api:
        informational: true
        target: 50%
        flags:
          - api

github_checks:
  annotations: true

comment:
  layout: "newheader, diff, flags, components, files"
  require_changes: false # false :: posts comment regardless of whether coverage changes
  require_base: false # [false :: doesn't need a base report to post]
  require_head: true # [true :: must have a head report to post]
  show_carryforward_flags: true
  # show_critical_paths: true # affects labeled critical files -- leaving out for now
  hide_comment_details: true # collapse 'detailed info' for PR comment

flag_management:
  individual_flags:
    - name: api
      paths:
        - flask/
    - name: frontend
      paths:
        - react/
  default_rules:
    carryforward: true
    statuses:
      - type: project
        target: auto
        threshold: 2%

component_management:
  default_rules:
    statuses:
      - type: project # in this case every component that doens't have a status defined will have a project type one
        target: auto
  individual_components:
    - component_id: python_component
      name: checkout_module
      paths:
        - flask/src/**
    - component_id: js_component
      name: product_component
      paths:
        - react/src/components/**

# Vlad said--
# i just checked the file. the test_utils.py is purely a test file,
# just assertions and tests, so in theory it shouldn't be counted
# towards the overall coverage of the repo or "production code".
# i'm not sure why some tools include the tests as part of the coverage report,
# but it can be mitigated by excluding them via codecov.yaml or --source setting
# in the pytest, but the issue is that the test directory is also under the
# /src/  so it looks like it is instrumenting the code for all the python files
# in that location. this is not a big deal, but in case anyone asks this is why
# it is showing up.
ignore:
  - "flask/src/test/"
