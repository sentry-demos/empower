#Create local log
#logging.file.name=log/spring-boot.log

#https://docs.sentry.io/platforms/java/guides/spring-boot/logging-frameworks/

sentry.logging.minimum-event-level=warn
sentry.logging.minimum-breadcrumb-level=debug
sentry.exception-resolver-order=-1
sentry.enable-tracing=true
sentry.traces-sample-rate=1.0

spring.datasource.driver-class-name=org.postgresql.Driver
#So app starts despite "table already exists" errors.
spring.datasource.continue-on-error=true
#Enforces database initialization
spring.datasource.initialization-mode=always

# Must be set for request body to be captured
sentry.max-request-body-size=always
sentry.send-default-pii=true

sentry.dsn=${SPRINGBOOT_DSN}
sentry.release=${SPRINGBOOT_RELEASE}

# NOTE: if run.sh is called after build.sh it must overwrite this value
spring.cloud.gcp.sql.enabled=${SPRINGBOOT_CLOUD_GCP_SQL_ENABLED}

# staging/production only
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.cloud.gcp.sql.database-name=${DB_DATABASE}
# This value is formatted in the form: [gcp-project-id]:[region]:[instance-name]
spring.cloud.gcp.sql.instance-connection-name=${DB_CLOUD_SQL_CONNECTION_NAME}

# local only, should be empty when running in GAE
${SPRINGBOOT_DATASOURCE_URL_PROPERTY}

empower.ruby_backend=${RUBY_URL}